{"version":3,"sources":["./src/app/modules/task/task-routing.module.ts","./src/app/layout/header/header.component.ts","./src/app/layout/header/header.component.html","./src/app/shared/material.module.ts","./src/app/core/interceptor/http-config.interceptor.ts","./src/app/layout/content-layout/content-layout.component.ts","./src/app/layout/content-layout/content-layout.component.html","./src/environments/environment.ts","./src/app/data/service/api.service.ts","./src/app/data/schema/task.ts","./src/app/modules/task/task.module.ts","./src/app/modules/task/page/counter/counter.component.ts","./src/app/modules/task/page/counter/counter.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/modules/task/page/detail/task.component.ts","./src/app/modules/task/page/detail/task.component.html","./src/app/app.module.ts","./src/app/layout/nav/nav.component.html","./src/app/layout/nav/nav.component.ts","./src/app/layout/footer/footer.component.ts","./src/app/layout/footer/footer.component.html","./src/app/data/service/task.service.ts","./src/app/core/core.module.ts","./src/app/modules/task/page/list/task-list.component.ts","./src/app/modules/task/page/list/task-list.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {RouterModule, Routes} from '@angular/router';\nimport {TaskListComponent} from './page/list/task-list.component';\nimport {CounterComponent} from './page/counter/counter.component';\nimport {TaskComponent} from './page/detail/task.component';\n\nconst routes: Routes = [\n  {\n    path: 'list',\n    component: TaskListComponent\n  },\n  {\n    path: 'detail',\n    component: TaskComponent\n  },\n  {\n    path: 'detail/:id',\n    component: TaskComponent\n  },\n  {\n    path: 'counter',\n    component: CounterComponent\n  },\n];\nexport const TaskRoutes = RouterModule.forChild(routes);\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent  {\n\n}\n","<header class=\"mat-card-header color\">\n  <hr>\n  <div class=\"container\">\n  </div>\n</header>\n","import {NgModule} from '@angular/core';\n\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    MatRadioModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSnackBarModule\n  ],\n  exports: [\n    MatRadioModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n    MatSidenavModule\n  ]\n})\nexport class MaterialModule {}\n","import {Injectable} from '@angular/core';\nimport {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\n\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\n\nimport {ToastrService} from 'ngx-toastr';\nimport {HttpError} from '../../data/dto/http-error';\n\n@Injectable()\nexport class HttpConfigInterceptor implements HttpInterceptor {\n  constructor(private toastService: ToastrService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    return next.handle(request).pipe(\n      map((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n          if (event.status && event.statusText) {\n            const message = `Action executed successfully: ${event.statusText}`;\n            this.toastService.success(message);\n          }\n        }\n        return event;\n      }),\n      catchError((error: HttpErrorResponse) => {\n        let httpError: HttpError;\n        httpError = {\n          code: error && error.error && error.error.errorCode ? error.error.errorCode : '',\n          message: error && error.error && error.error.message ? error.error.message : '',\n          status: error.status\n        };\n        this.toastService.error(httpError.code, httpError.message);\n        return throwError(error);\n      }));\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {OverlayContainer} from '@angular/cdk/overlay';\n\n@Component({\n  selector: 'app-content-layout',\n  templateUrl: './content-layout.component.html',\n  styleUrls: ['./content-layout.component.scss']\n})\nexport class ContentLayoutComponent implements OnInit {\n  private overlayContainer!: OverlayContainer;\n  public theme = 'my-light-theme';\n\n  ngOnInit(): void {\n    if (this.overlayContainer) {\n      this.overlayContainer.getContainerElement().classList.add(this.theme);\n    }\n  }\n}\n","<div [class]=\"theme\">\n  <div class=\"mat-app-background\">\n    <app-nav></app-nav>\n      <div class=\"container\">\n        <router-outlet></router-outlet>\n      </div>\n    <app-footer></app-footer>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: 'http://localhost:8080/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  post(endPoint: string, body: any = {}): Observable<any> {\n    return this.http.post(`${environment.API_URL}${endPoint}`, body).pipe();\n  }\n\n  get(endPoint: string): Observable<any> {\n    return this.http.get(`${environment.API_URL}${endPoint}`).pipe();\n  }\n\n  put(endPoint: string, body: any = {}): Observable<any> {\n    return this.http.put(`${environment.API_URL}${endPoint}`, body).pipe();\n  }\n\n  delete(endPoint: string): Observable<any> {\n    return this.http.delete(`${environment.API_URL}${endPoint}`).pipe();\n  }\n\n}\n","export class Task {\n  id?: string;\n  name?: string;\n  description?: string;\n  createdDate?: Date;\n}\n","import {NgModule} from '@angular/core';\nimport {CounterComponent} from './page/counter/counter.component';\nimport {TaskRoutes} from './task-routing.module';\nimport {TaskListComponent} from './page/list/task-list.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MaterialModule} from '../../shared/material.module';\nimport {CommonModule} from '@angular/common';\nimport {TaskComponent} from './page/detail/task.component';\n\n\n@NgModule({\n    declarations: [CounterComponent, TaskListComponent, TaskComponent],\n  exports: [\n    TaskListComponent,\n    CounterComponent,\n    TaskComponent\n  ],\n  imports: [\n    TaskRoutes,\n    ReactiveFormsModule,\n    MaterialModule,\n    CommonModule,\n  ]\n})\nexport class TaskModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Task} from '../../../../data/schema/task';\nimport {TaskService} from '../../../../data/service/task.service';\nimport {interval, of, Subscription} from 'rxjs';\nimport {catchError, startWith, switchMap} from 'rxjs/operators';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.scss']\n})\nexport class CounterComponent implements OnInit {\n  counterForm!: FormGroup;\n  id = new FormControl();\n  error: string | undefined;\n  taskResponse: Task = new Task();\n  isNextActive: boolean | undefined;\n  isExecuteActive: boolean | undefined;\n  showSpinner: boolean | undefined;\n  isSpinnerView: boolean | undefined;\n  timeInterval!: Subscription;\n  counter!: number;\n  limit!: number;\n\n  constructor(private formBuilder: FormBuilder,\n              private taskService: TaskService,\n              private router: Router) {\n\n    this.buildForm();\n  }\n\n  ngOnInit(): void {\n    this.isNextActive = true;\n    this.isExecuteActive = false;\n    this.isSpinnerView = false;\n    this.showSpinner = false;\n  }\n\n  buildForm(): void {\n    this.counterForm = this.formBuilder.group({\n      from: ['', Validators.required],\n      to: ['', Validators.required]\n    });\n  }\n\n  nextStep(): void  {\n    if (this.validateCounters()) {\n      this.isNextActive = false;\n      this.isExecuteActive = true;\n    }\n  }\n\n  lastStep(): void  {\n      this.isNextActive = false;\n      this.isExecuteActive = true;\n      this.isSpinnerView = false;\n  }\n\n  executeCounter(): void  {\n    const counter = this.counterForm.value;\n    this.counter = parseInt(counter.from, 10) - 1;\n    this.limit = counter.to;\n    this.taskService.executeCounting(counter.from, counter.to)\n      .pipe(catchError((error: any) => of( error)))\n      .subscribe(() => {\n        this.isFinishCounter();\n      });\n    this.isNextActive = true;\n    this.isExecuteActive = false;\n    this.isSpinnerView = true;\n    this.showSpinner = true;\n  }\n\n  isFinishCounter(): void  {\n    this.isNextActive = false;\n    this.timeInterval = interval(1000)\n      .pipe(\n        startWith(0),\n        switchMap(() => this.taskService.isFinishCounting())\n      ).subscribe((data) => {\n        if (data) {\n          this.counter += 1;\n        } else {\n          this.counter = 0;\n          this.showSpinner = false;\n          this.isSpinnerView = false;\n          this.isNextActive = true;\n          this.timeInterval.unsubscribe();\n        }\n      });\n  }\n\n  cancelCounter(): void  {\n    this.taskService.stopCounting()\n      .pipe(catchError((error: any) => of( error)))\n      .subscribe(() => {\n        this.showSpinner = false;\n        this.isNextActive = true;\n        this.isExecuteActive = false;\n      });\n  }\n\n  cancel(): void  {\n    const url = '/tasks/list';\n    this.router.navigate([url]);\n  }\n\n  private validateCounters(): void | boolean  {\n    if (this.counterForm.invalid) {\n      return Object.values(this.counterForm.controls)\n        .forEach(control => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach(cont => cont.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n        return false;\n      });\n    }\n    return true;\n  }\n}\n","<mat-card *ngIf=\"isNextActive\">\n    <mat-card-title>Please input the configuration for Count from X to Y task</mat-card-title>\n  <mat-card-content>\n    <form [formGroup]=\"counterForm\">\n      <table>\n        <tr>\n          <td>\n            <mat-form-field>\n              <input matInput placeholder=\"Counting from number\" formControlName=\"from\" name=\"from\" required>\n            </mat-form-field>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <mat-form-field>\n              <input matInput placeholder=\"Counting to number\" formControlName=\"to\" name=\"to\" required>\n            </mat-form-field>\n          </td>\n        </tr>\n      </table>\n    </form>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-raised-button class=\"btn btn-info\" (click)=\"nextStep()\" color=\"primary\">Next</button>\n    <button mat-raised-button class=\"btn btn-danger\" (click)=\"cancel()\" color=\"accent\">Cancel</button>\n  </mat-card-actions>\n</mat-card>\n<mat-card *ngIf=\"isExecuteActive\">\n    <mat-card-title>Do you want to execute the task now?</mat-card-title>\n  <mat-card-actions>\n    <button mat-raised-button class=\"btn btn-info\" (click)=\"executeCounter()\" color=\"primary\">Yes</button>\n    <button mat-raised-button class=\"btn btn-danger\" (click)=\"cancel()\" color=\"accent\">No</button>\n  </mat-card-actions>\n</mat-card>\n<mat-card *ngIf=\"isSpinnerView\">\n    <mat-card-content>Currently Number is {{counter}} / {{limit}}</mat-card-content>\n  <mat-spinner *ngIf=\"showSpinner\"></mat-spinner>\n  <mat-card-actions>\n  <button mat-raised-button class=\"btn btn-danger\" (click)=\"cancelCounter()\" color=\"warn\">Cancel execution</button>\n  </mat-card-actions>\n</mat-card>\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<router-outlet></router-outlet>\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Task} from '../../../../data/schema/task';\nimport {TaskService} from '../../../../data/service/task.service';\nimport {catchError} from 'rxjs/operators';\nimport {of} from 'rxjs';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.scss']\n})\nexport class TaskComponent implements OnInit {\n  taskForm!: FormGroup;\n  id = new FormControl();\n  error: string | undefined;\n  taskResponse: Task = new Task();\n  isCreateActive: boolean | undefined;\n  isUpdateActive: boolean | undefined;\n\n  constructor(private formBuilder: FormBuilder,\n              private taskService: TaskService,\n              private route: ActivatedRoute,\n              private router: Router) {\n\n    this.buildForm();\n  }\n\n  ngOnInit(): void {\n    let id = '';\n    this.route.params.subscribe(params => {\n      id = params.id;\n    });\n    this.getFormElements(id);\n  }\n\n  buildForm(): void {\n    this.taskForm = this.formBuilder.group({\n      id: [''],\n      name: ['', Validators.required],\n      description: [''],\n    });\n  }\n\n  createTask(): void {\n    if (this.validateTask()) {\n      const task = this.taskForm.value;\n      this.taskService.create(task).pipe(\n        catchError(error => of(this.error = error)))\n        .subscribe((data) => {\n          if (data) {\n            this.taskResponse = data;\n            this.router.navigate(['tasks/list']);\n          }\n        });\n    }\n  }\n\n  updateTask(): void {\n    if (this.validateTask()) {\n      const task = this.taskForm.value;\n      this.taskService.update(task, task.id).pipe(\n        catchError(error => of(this.error = error)))\n        .subscribe((data) => {\n          if (data) {\n            this.taskResponse = data;\n            this.router.navigate(['tasks/list']);\n          }\n        });\n    }\n  }\n\n  cancel(): void {\n    const url = '/tasks/list';\n    this.router.navigate([url]);\n  }\n\n  private getFormElements(id: string): void {\n    if (id) {\n      this.loadTask(id);\n      this.isUpdateActive = true;\n      this.isCreateActive = false;\n    } else {\n      this.isCreateActive = true;\n      this.isUpdateActive = false;\n    }\n  }\n\n  private loadTask(id: string): void {\n    this.taskService.getById(id).pipe(\n      catchError(error => of(this.error = error)))\n      .subscribe((data) => {\n        if (data) {\n          this.taskForm.setValue({\n            id: data.id,\n            name: data.name,\n            description: data.description\n          });\n        }\n      });\n  }\n\n  private validateTask(): void | boolean {\n    if (this.taskForm.invalid) {\n      return Object.values(this.taskForm.controls).forEach(control => {\n        if (control instanceof FormGroup) {\n          Object.values(control.controls).forEach(cont => cont.markAsTouched());\n        } else {\n          control.markAsTouched();\n        }\n        return false;\n      });\n    }\n    return true;\n  }\n\n}\n","<mat-card class=\"card\">\n  <mat-card-header>\n    <mat-card-title>Task Detail</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <form [formGroup]=\"taskForm\">\n      <table>\n          <input matInput [formControl]=\"id\" [hidden]=\"true\">\n        <tr>\n          <td>\n            <mat-form-field>\n              <mat-label>Task name</mat-label>\n              <label>\n                <input matInput placeholder=\"Task name\" formControlName=\"name\" name=\"name\" required>\n              </label>\n            </mat-form-field>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <mat-form-field>\n              <mat-label>Task Description</mat-label>\n              <label>\n                <input matInput placeholder=\"Task description\" formControlName=\"description\" name=\"description\">\n              </label>\n            </mat-form-field>\n          </td>\n        </tr>\n      </table>\n    </form>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-raised-button class=\"btn btn-info\" (click)=\"createTask()\" color=\"primary\" *ngIf=\"isCreateActive\">Create</button>\n    <button mat-raised-button class=\"btn btn-success\" (click)=\"updateTask()\" color=\"primary\" *ngIf=\"isUpdateActive\">Update</button>\n    <button mat-raised-button class=\"btn btn-danger\" (click)=\"cancel()\" color=\"accent\">Cancel</button>\n  </mat-card-actions>\n</mat-card>\n\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {CoreModule} from './core/core.module';\nimport {ToastrModule} from 'ngx-toastr';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {TaskModule} from './modules/task/task.module';\nimport {MaterialModule} from './shared/material.module';\nimport {ContentLayoutComponent} from './layout/content-layout/content-layout.component';\nimport {HeaderComponent} from './layout/header/header.component';\nimport {FooterComponent} from './layout/footer/footer.component';\nimport {NavComponent} from './layout/nav/nav.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContentLayoutComponent,\n    HeaderComponent,\n    FooterComponent,\n    NavComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CoreModule,\n    TaskModule,\n    MaterialModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right',\n      timeOut: 1000\n    }),\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"wrapper\">\n  <div class=\"toolbar\">\n    <mat-toolbar color=\"primary\">\n      <div class=\"container\">\n        <span class=\"d-none d-md-inline\">\n          <button mat-button class=\"nav-button\" *ngFor=\"let item of navItems\" [routerLink]=\"[item.link]\"\n            routerLinkActive=\"active\">\n            {{ item.title }}\n          </button>\n        </span>\n      </div>\n    </mat-toolbar>\n  </div>\n  <hr>\n</div>\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent {\n  navItems = [\n    { link: '/home', title: 'Home' },\n  ];\n\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent {\n}\n","<footer class=\"footer color\">\n  <hr>\n  <div class=\"container\">\n    <span class=\"text-muted\">\n      @Github projects:\n        </span>\n    <span class=\"text-muted\">\n      <a href=\"https://github.com/Steampunk1453\">\n       https://github.com/Steampunk1453\n      </a>\n    </span>\n  </div>\n</footer>\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {map} from 'rxjs/operators';\nimport {Task} from '../schema/task';\nimport {ApiService} from './api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  private TASK_URL = '/tasks/';\n\n  constructor(private apiService: ApiService) {}\n\n  create(task: Task): Observable<Task> {\n    return this.apiService.post(this.TASK_URL, task)\n      .pipe(\n        map((data) => {\n            return data;\n          }\n        )\n      );\n  }\n\n  getAll(): Observable<Array<Task>> {\n    return this.apiService.get(this.TASK_URL)\n      .pipe(\n        map((data) => {\n            return data;\n          }\n        )\n      );\n  }\n\n  getById(id: number | string): Observable<Task> {\n    return this.apiService.get(`${this.TASK_URL}/${id}`)\n      .pipe(\n        map((data) => {\n            return data;\n          }\n        )\n      );\n  }\n\n\n  update(task: Task, id: number | string): Observable<Task> {\n    return this.apiService.put(`${this.TASK_URL}${id}`, task)\n      .pipe(\n        map((data) => {\n            return data;\n          }\n        )\n      );\n  }\n\n  delete(id: string | undefined): Observable<{}> {\n    return this.apiService.delete(`${this.TASK_URL}${id}`)\n      .pipe(\n        map((data) => {\n            return data;\n          }\n        )\n      );\n  }\n\n  executeTask(id: number | string): Observable<{}> {\n    return this.apiService.post(`${this.TASK_URL}${id}/execute`)\n      .pipe(\n        map((data) => {\n            return data;\n          }\n        )\n      );\n  }\n\n  executeCounting(start: number, end: number): Observable<{}> {\n    return this.apiService.get(`${this.TASK_URL}counter/${start}/${end}`)\n      .pipe(\n        map((data) => {\n            return data;\n          }\n        )\n      );\n  }\n\n  stopCounting(): Observable<{}> {\n    return this.apiService.get(`${this.TASK_URL}counter/stop`)\n      .pipe(\n        map((data) => {\n            return data;\n          }\n        )\n      );\n  }\n\n  isFinishCounting(): Observable<boolean> {\n    return this.apiService.get(`${this.TASK_URL}counter/isFinish`)\n      .pipe(\n        map((data) => {\n            return data;\n          }\n        )\n      );\n  }\n\n}\n","import {NgModule, Optional, SkipSelf} from '@angular/core';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {HttpConfigInterceptor} from './interceptor/http-config.interceptor';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    HttpClientModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpConfigInterceptor,\n      multi: true\n    }\n  ]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n  }\n}\n","import {Component, ViewChild} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {catchError} from 'rxjs/operators';\nimport {of} from 'rxjs';\nimport {Router} from '@angular/router';\nimport {Task} from 'src/app/data/schema/task';\nimport {TaskService} from '../../../../data/service/task.service';\nimport {MatPaginator} from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.scss']\n})\nexport class TaskListComponent {\n  tasks: Task[] = [];\n  displayedColumns = ['name', 'description' , 'operations'];\n  dataSource: MatTableDataSource<Task> = new MatTableDataSource<Task>();\n  loading = true;\n  error: string | undefined;\n\n  @ViewChild(MatPaginator)\n  paginator!: MatPaginator;\n\n  constructor(private taskService: TaskService,\n              private snackBar: MatSnackBar,\n              private router: Router) {\n\n    this.taskService.getAll().pipe(\n      catchError(error => of(this.error = error)))\n      .subscribe((data) => {\n        if (data) {\n          this.tasks = data;\n          this.dataSource = new MatTableDataSource(this.tasks);\n          this.dataSource.paginator = this.paginator;\n          this.loading = false;\n        }\n      });\n  }\n\n  navigateToDetail(): void {\n    const url = '/tasks/detail';\n    this.router.navigate([url]);\n  }\n\n  navigateToCounter(task: Task): void {\n    this.snackBar.open(`Counter task #${task.name}`, 'Create', {\n      duration: 2000\n    });\n    const url = '/tasks/counter';\n    this.router.navigate([url]);\n  }\n\n  editTask(task: Task): void {\n    this.snackBar.open(`Edit task #${task.name}`, 'Edit', {\n      duration: 2000\n    });\n    const url = '/tasks/detail/';\n    this.router.navigate([url + task.id]);\n  }\n\n  deleteTask(task: Task): void {\n    this.snackBar.open(`Deleting task #${task.name}`, 'Delete', {\n      duration: 2000\n    });\n    this.taskService.delete(task.id).pipe(\n      catchError(error => of(this.error = error)))\n      .subscribe();\n    this.dataSource.data.splice(this.dataSource.data.indexOf(task), 1);\n    this.dataSource.paginator = this.paginator;\n  }\n\n  applyFilter(event: Event): void {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","<mat-card-header>\n  <mat-card-title>Tasks</mat-card-title>\n</mat-card-header>\n<mat-form-field>\n  <mat-label>Filter</mat-label>\n  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Filter\">\n</mat-form-field>\n<div class=\"mat-fab-button\">\n  <button mat-fab color=\"primary\" (click)=\"navigateToDetail()\">\n    <mat-icon>add</mat-icon>\n  </button>\n<div>\n<div class=\"mat-elevation-z12\">\n  <mat-spinner [style.display]=\"loading ? 'block' : 'none'\"></mat-spinner>\n  <mat-table  [style.display]=\"loading === false ? 'block' : 'none'\" #table [dataSource]=\"dataSource\">\n    <ng-container matColumnDef=\"name\">\n      <mat-header-cell *matHeaderCellDef class=\"mat-header-cell mat-cell\">Name</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.name}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"description\">\n      <mat-header-cell *matHeaderCellDef class=\"mat-header-cell mat-cell\">Description</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.description}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"operations\">\n      <mat-header-cell *matHeaderCellDef class=\"mat-header-cell mat-cell\">Operations</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">\n        <button mat-button color=\"primary\" (click)=\"navigateToCounter(row)\">\n          <mat-icon>alarm</mat-icon>\n        </button>\n        <button mat-button color=\"primary\" (click)=\"editTask(row)\">\n          <mat-icon>edit</mat-icon>\n        </button>\n        <button mat-button color=\"primary\" (click)=\"deleteTask(row)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n      </mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n  <mat-paginator #paginator [style.display]=\"loading === false ? 'block' : 'none'\" [pageSize]=\"5\"></mat-paginator>\n</div>\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ContentLayoutComponent} from './layout/content-layout/content-layout.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/tasks/list',\n    pathMatch: 'full'\n  },\n  {\n    path: '',\n    component: ContentLayoutComponent,\n    children: [\n      {\n        path: 'home',\n        loadChildren: () =>\n          import('./modules/home/home.module').then(m => m.HomeModule)\n      },\n      {\n        path: 'tasks',\n        loadChildren: () =>\n          import('./modules/task/task.module').then(m => m.TaskModule)\n      }\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule],\n  providers: []\n})\nexport class AppRoutingModule {}\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}